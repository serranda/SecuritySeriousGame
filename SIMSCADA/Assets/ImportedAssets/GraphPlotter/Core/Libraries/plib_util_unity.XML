<?xml version="1.0"?>
<doc>
    <assembly>
        <name>plib_util_unity</name>
    </assembly>
    <members>
        <member name="M:plib.Util.Extensions.RealBounds(UnityEngine.MeshFilter)">
            <summary>
            Used to convert meshfilter.bounds into usable world space bounds.
            </summary>
            <param name="_bounds">Local bounds</param>
            <returns>Transform world bounds</returns>
        </member>
        <member name="M:plib.Util.Extensions.ToVector3(System.Xml.Linq.XElement)">
            <summary>
            Converts a XElement to an Unity Vector3 using float.parse
            </summary>
            <param name="_element">XElement with Attributes x, y and z of type float</param>
            <returns></returns>
        </member>
        <member name="M:plib.Util.Extensions.ToQuaternion(System.Xml.Linq.XElement)">
            <summary>
            Converts a XElement to an Unity Quaternion using float.parse
            </summary>
            <param name="_element">XElement with Attributes x, y, z and w of type float</param>
            <returns></returns>
        </member>
        <member name="M:plib.Util.Extensions.ToXElement(UnityEngine.Vector3)">
            <summary>
            Converts a an Unity Vector3 to a XElement
            </summary>
            <param name="_vec"></param>
            <returns>XElement with Attributes x, y and z floatparseable</returns>
        </member>
        <member name="M:plib.Util.Extensions.ToXElement(UnityEngine.Quaternion)">
            <summary>
            Converts a an Unity Quaternion to a XElement
            </summary>
            <param name="_rot"></param>
            <returns>XElement with Attributes x, y, z and w floatparseable</returns>
        </member>
        <member name="M:plib.Util.UIHelper.MakeReadable(UnityEngine.Texture2D,UnityEngine.TextureFormat,System.Boolean)">
            <summary>
            This methods uses a temporary render texture to read the texture data from a compressed texture.
            The texture data is then read from screen and saved to the returned texture.
            The method may be used to convert compressed textures to uncompressed readable textures but is very heavy
            on performance. It is meant to be used during Edit mode, never use it in Play mode or do so at your own risk.
            </summary>
            <param name="_texture">The source compressed or uncompressed texture to make readable.</param>
            <param name="_format">Format to use for the returned, readable texture.</param>
            <param name="_useMipMaps">Should the returned texture use mipmaps?</param>
            <returns>A readable Texture2D in the given format.</returns>
        </member>
        <member name="M:plib.Util.UnityHelper.GetMeshSurface(UnityEngine.Mesh,System.Int32)">
            <summary>
            Returns the surface of a subMesh of a mesh
            </summary>
            <param name="_mesh">The Mesh</param>
            <param name="_subMeshID">SubMeshID</param>
            <returns></returns>
        </member>
        <member name="M:plib.Util.UnityHelper.GetMeshSurface(UnityEngine.Mesh)">
            <summary>
            Returns the whole surface of a mesh
            </summary>
            <param name="_mesh">the mesh</param>
            <returns></returns>
        </member>
        <member name="M:plib.Util.UnityHelper.CombinedBounds(UnityEngine.GameObject)">
            <summary>
            Combines the bounds in world space of all renderers at _go or it's children.
            </summary>
            <param name="_go">The gameobject to fetch the total combined bounds from</param>
            <returns>The combined bounds of all renderers in world space</returns>
        </member>
        <member name="M:plib.Util.UnityHelper.GetHierarchyPath(UnityEngine.GameObject)">
            <summary>
            Returns the path of the game object in the hierarchy build with go name.
            Root Parent name/Parent name/Child name
            </summary>
            <param name="_source">The gameobject of which to retrieve the hierarchy path.</param>
            <returns>A string containing the gameobject's hierarchy path.</returns>
        </member>
        <member name="M:plib.Util.UnityHelper.GetRelativePath(UnityEngine.Component,UnityEngine.Transform)">
            <summary>
            Return The path of the gameobject in the hierarchy relative to a parent
            </summary>
            <param name="_child">Child component</param>
            <param name="_parent">Transform of the parent</param>
            <returns>relative path with forward slashes</returns>
        </member>
        <member name="M:plib.Util.UnityHelper.FindAllOfType``1">
            <summary>
            Finds all components of the given type in all scenes currently loaded (single AND additively) regardless whether their GameObjects are
            active or inactive.
            
            !! Funktioniert aktuell nicht in Awake (Unity Bug) und gibt keine Components in DontDestroyOnLoad zurück.
            Wie nützlich diese Methode dann noch ist, bleibt dem Nutzer überlassen. !!
            </summary>
            <typeparam name="T">The Type of the component to find.</typeparam>
            <returns>All components of the given type or an empty array if none where found.</returns>
        </member>
        <member name="M:plib.Util.UnityHelper.FindOfType``1">
            <summary>
            Finds the first found component of the specified type in all currently loaded scenes (single AND additively).
            The Component is returned with no regard to the GameObjects active state.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:plib.Util.UnityHelper.ForEachChildRecursively(UnityEngine.GameObject,System.Action{UnityEngine.GameObject})">
            <summary>
            Executes action for each child in _sources child list (recursively).
            Action is executed from the ground up, starting from leaf transforms.
            Action is also executed on the _source GameObject.
            </summary>
            <param name="_source">GameObject to execute action for all children.</param>
            <param name="_action">The action to perform for each game obeject in source's hierarchy.</param>
        </member>
        <member name="M:plib.Util.UnityHelper.ResetScale(UnityEngine.Transform)">
            <summary>
            Resets the transforms local scale to (1,1,1)
            </summary>
            <param name="_source">The transform to reset</param>
        </member>
        <member name="M:plib.Util.UnityHelper.ResetRotation(UnityEngine.Transform)">
            <summary>
            Resets the transforms rotation to <seealso cref="P:UnityEngine.Quaternion.identity"/>
            </summary>
            <param name="_source">The transform to reset</param>
        </member>
        <member name="M:plib.Util.UnityHelper.Reset(UnityEngine.Transform)">
            <summary>
            Resets the transforms position, rotation, scale to their default values.
            </summary>
            <param name="_source">The transform to reset</param>
        </member>
        <member name="M:plib.Util.UnityHelper.ResetLocal(UnityEngine.Transform)">
            <summary>
            Resets the transforms local position, local rotation, scale to their default values.
            </summary>
            <param name="_source">The transform to reset</param>
        </member>
        <member name="M:plib.Util.UnityHelper.ResetPosition(UnityEngine.Transform)">
            <summary>
            Resets the transforms world position to <seealso cref="P:UnityEngine.Vector3.zero"/>
            </summary>
            <param name="_source">The transform to reset</param>
        </member>
        <member name="P:plib.Util.UnityHelper.UnitIkohedronVertices">
            <summary>
            Gibt den VertexBuffer für einen Ikosaeder zurück mit dem Radius 1
            </summary>
        </member>
        <member name="P:plib.Util.UnityHelper.UnitIkohedronIndices">
            <summary>
            Gibt den IndexBuffer für einen Ikosaeder zurück, sollte nur mit UnitIkohedronVertices verwendendet werden
            </summary>
        </member>
        <member name="M:plib.Util.Objects.ManagerPool.RegisterGlobalTypeAssoc(System.Type,System.Type)">
            <summary>
            Use this if you want to assign certain assemblies to the specified manager.
            Usefull if you don't have source access to the pobject type and want to generally assign it to a manager.
            </summary>
            <param name="_pObject">The PObject which should be associated with a manager.</param>
            <param name="_assocManager">The manager to globally use for the given type of PObject.</param>
        </member>
        <member name="M:plib.Util.Objects.PObject.ActivateObject">
            <summary>
            Use ActivateObject to initialize all values specific to this object.
            Do not attempt to access values from other object managers as they might not have been initialized.
            </summary>
        </member>
        <member name="M:plib.Util.Objects.PObject.LinkObject">
            <summary>
            Use LinkObject to access values from another object manager.
            On linkobject all managers have been initialized and their specific values may be accessed.
            </summary>
        </member>
    </members>
</doc>
